name: Refresh Snapshots

on:
  schedule:
    - cron: "0 6 * * *"        # run daily at 06:00 UTC
  workflow_dispatch: {}        # allow manual runs from the Actions tab

jobs:
  refresh:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # needed to push changes with GITHUB_TOKEN

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0        # keeps history so commits can be made cleanly

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Stage 1 (snapshot-aware scraper)
      - name: Scrape top free (all categories)
        run: |
          python app_store_scraper_v2.py \
            --collection top-free \
            --all-categories \
            --limit 100 \
            --note "GitHub Action top-free"

      - name: Scrape top paid (all categories)
        run: |
          python app_store_scraper_v2.py \
            --collection top-paid \
            --all-categories \
            --limit 100 \
            --note "GitHub Action top-paid"

      # Stage 1.5 reuse
      - name: Reuse existing Stage 2 scores
        run: python scripts/reuse_stage2_scores.py --log-level INFO

      # Stage 2 scoring (only remaining NULL rows)
      - name: Stage 2 scoring
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python app_stage2_analysis.py

      # Build deltas table inside the DB
      - name: Materialise snapshot deltas
        run: python analysis/build_deltas.py

      # Commit database (optional skip if using artifacts/LFS)
      - name: Commit updated database
        env:
          COMMIT_USER: ${{ secrets.GIT_COMMIT_USER || 'github-actions[bot]' }}
          COMMIT_EMAIL: ${{ secrets.GIT_COMMIT_EMAIL || 'github-actions[bot]@users.noreply.github.com' }}
        run: |
          git config user.name "$COMMIT_USER"
          git config user.email "$COMMIT_EMAIL"
          git add exports/app_store_apps_v2.db
          git add .gitignore README.md streamlit_app.py app_stage2_analysis.py \
                  analysis/build_deltas.py scripts/reuse_stage2_scores.py \
                  app_store_scraper_v2.py experiments/batch_stage2_experiment.py \
                  experiments/cheaper_model_experiment.py
          git commit -m "Automated snapshot refresh" || echo "Nothing to commit"

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main

      # If you prefer not to commit the DB, comment out the commit/push block
      # above and instead upload it as an artifact:
      # - name: Upload snapshot DB
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app_store_apps_v2.db
      #     path: exports/app_store_apps_v2.db
      #     retention-days: 7
